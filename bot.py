import telebot
import films
from markup import *

TOKEN = '2067161053:AAFd1_GZJiWi3tkle28Ag_bkO7c1vEp8JL8'

bot = telebot.TeleBot(TOKEN, parse_mode=None)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    print('INFO ~ ' + str(message.from_user.id) + ' = ' + message.from_user.first_name + ' - "' + message.text + '"')

    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEDJZVhdmelY_UPvv1SCph9zeUcy8zrngACGgADHVUKFdBzSmAp7EJmIQQ')
    bot.send_message(message.chat.id,
                     f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!‚ò∫Ô∏è\n–Ø - –±–æ—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ—ç—Ç–∞, –∞–∫—Ç–µ—Ä–∞, —Ä–µ–∂–∏—Å—Å–µ—Ä–∞ –∏ –≥–µ–Ω–∏—è –í–ª–∞–¥–∏–º–∏—Ä–∞ –ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ!\n–ü–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ —Å–Ω–∏–∑—É.',
                     reply_markup=markup)


@bot.message_handler(content_types=['text', 'photo'])
def send_info(message):
    print('INFO ~ ' + str(message.from_user.id) + ' = ' + message.from_user.first_name + ' - "' + message.text + '"')

    if message.text == '–ë–∏–æ–≥—Ä–∞—Ñ–∏—èüôéüèª‚Äç‚ôÇÔ∏è':
        photo = open('photos/bio.jpeg', 'rb')
        bot.send_photo(message.chat.id, photo)
        photo.close()
        file = open('text/–ë–∏–æ–≥—Ä–∞—Ñ–∏—è.txt', 'r', encoding='utf-8')
        text = file.read()
        bot.send_message(message.chat.id, text, reply_markup=markup)
        file.close()

    elif message.text == '–§–∏–ª—å–º—ãüé•':
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Ñ–∏–ª—å–º:', reply_markup=markup_films)

    elif message.text == '–§–æ—Ç–æüì∏':
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Ñ–æ—Ç–æ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ —Å–Ω–∏–∑—É üòè\n–ï—Å–ª–∏ —á—Ç–æ —Å–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –ª–∏—Å—Ç–∞—Ç—å.', reply_markup=markup2)

    elif message.text == '–î–µ—Ç—Å—Ç–≤–æ' or message.text == '–Æ–Ω–æ—Å—Ç—å' or message.text == '–ú–æ–ª–æ–¥–æ—Å—Ç—å' or message.text == '–° –õ–∏–ª–µ–π –ë—Ä–∏–∫' or message.text == '–° –û—Å–∏–ø–æ–º' or message.text == '–ö–æ–ª—å—Ü–æ –õ–Æ–ë–õ–Æ' or message.text == '–ú–∞—Ä–∫–∞ 1940' or message.text == '–ü–∞–º—è—Ç–Ω–∏–∫ –≤ –ú–æ—Å–∫–≤–µ' or message.text == '–° —Å–∏–≥–∞—Ä–∫–æ–π' or message.text == '–° –∫–æ—Ç–∏–∫–æ–º' or message.text == '–ù–æ—Ä–¥–µ—Ä–Ω–µ 1923' or message.text == '–ö—Ä—ã–º 1926':
        photo = open('photos/' + message.text + '.jpg', 'rb')
        bot.send_photo(message.chat.id, photo)
        photo.close()

        file = open('text/' + message.text + '.txt', 'r', encoding='utf-8')
        text = file.read()
        bot.send_message(message.chat.id, text, reply_markup=markup2)
        file.close()

    elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–í–æ–∑—Ä–∞—â–∞–µ–º—Å—è... üòä')
        bot.send_message(message.chat.id, '–ö–Ω–æ–ø–∫–∏ –∫–∞–∫ –≤—Å–µ–≥–¥–∞ —Å–Ω–∏–∑—É.\n–í—ã–±–µ—Ä–∏ —Ç–æ —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ', reply_markup=markup)

    elif message.text == '–°—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏—èüìù':
        bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –ª–∏—Å—Ç–∞—Ç—å.\n–í—ã–±–µ—Ä–∏ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ:', reply_markup=markup_voice)

    elif message.text == '–û–±–ª–∞–∫–æ –≤ —à—Ç–∞–Ω–∞—Ö (–æ—Ç—Ä—ã–≤–æ–∫)' or message.text == '–í–∞–º' or message.text == '–õ–∏–ª–∏—á–∫–∞' or message.text == '–û —Å–æ–≤–µ—Ç—Å–∫–æ–º –ø–∞—Å–ø–æ—Ä—Ç–µ' or message.text == '–¢–æ–≤–∞—Ä–∏—â—É –ù–µ—Ç—Ç–µ, –ø–∞—Ä–∞—Ö–æ–¥—É –∏ —á–µ–ª–æ–≤–µ–∫—É' or message.text == '–¢—É—á–∫–∏–Ω—ã —à—Ç—É—á–∫–∏'or message.text == '–•–æ—Ä–æ—à–µ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –ª–æ—à–∞–¥—è–º' or message.text == '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ö–æ—Ä–æ—à–æ –∏ —á—Ç–æ —Ç–∞–∫–æ–µ –ø–ª–æ—Ö–æ':
        m_id = bot.send_message(message.chat.id, '–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...').message_id
        url_markup = types.InlineKeyboardMarkup()
        file_url = open('audio/text/' + message.text + '.txt', 'r')
        url_btn = types.InlineKeyboardButton(text='–ß–∏—Ç–∞—Ç—å!üìñ',
                                             url=file_url.read())
        file_url.close()
        url_markup.add(url_btn)
        audio = open('audio/voice/' + message.text + '.mp3', 'rb')
        bot.send_voice(message.chat.id, audio, reply_markup=url_markup)
        audio.close()
        bot.delete_message(message.chat.id, m_id)

    elif message.text == '–°–∞–π—Ç-–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æüåê':
        url_markup = types.InlineKeyboardMarkup()
        url_btn = types.InlineKeyboardButton(text='–ù–∞–∂–º–∏!üï∏Ô∏è', url="https://alexshatokhin.github.io/VladimirMayakovsky/dist/")
        url_markup.add(url_btn)

        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEDTHhhk4xQNJ5qijQtCg7i2CyiITE1LgACzAQAAhyS0gMM4Xbjastl2iIE')
        bot.send_message(message.chat.id, '–ú–æ–π –¥—Ä—É–≥ —Å–¥–µ–ª–∞–ª —Å–∞–π—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ú–∞—è–∫–æ–≤—Å–∫–æ–≥–æ!\n–û—Ü–µ–Ω–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞',
                         reply_markup=url_markup)

        back_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back_btn = types.KeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥')
        back_markup.add(back_btn)
        bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥?', reply_markup=back_markup)

    else:
        bot.send_message(message.chat.id, '–Ø —Ç–∞–∫–æ–µ –Ω–µ –ø–æ–Ω–∏–º–∞—é, –Ω–æ –º–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —á—Ç–æ–±—ã —è –ø–æ–Ω–∏–º–∞–ª —ç—Ç–æ!', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def send_next(call):
    if call.data == '0' or call.data == '1' or call.data == '2':
        photo = open('films/poster' + call.data + '.jpg', 'rb')
        bot.send_photo(call.message.chat.id, photo, reply_markup=markup)
        photo.close()

        url_markup = types.InlineKeyboardMarkup()
        url_btn = types.InlineKeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º!üçø', url=films.film[int(call.data)]["link"])
        url_markup.add(url_btn)
        bot.send_message(call.message.chat.id,
                         f'<b>{films.film[int(call.data)]["name"]}</b>\n–ì–æ–¥: <b><i>{films.film[int(call.data)]["year"]}</i></b>\n–†–µ–π—Ç–∏–Ω–≥: <b><i>{films.film[int(call.data)]["rating"]}</i></b> ‚≠êÔ∏è\n{films.film[int(call.data)]["text"]}',
                         parse_mode='html', reply_markup=url_markup)

        back_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back_btn = types.KeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥')
        back_markup.add(back_btn)
        bot.send_message(call.message.chat.id, '–•–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥?', reply_markup=back_markup)

bot.infinity_polling()
